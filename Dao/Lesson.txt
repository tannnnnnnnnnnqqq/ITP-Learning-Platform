Introduction To Programming|This lesson provides a general introduction to programming language. It is designed to give students the ability to write simple console programs and to be able to understand such programs written by others. The lesson covers problem solving skills, writing algorithms, basic programming syntax, control structures, functions and input/output operations.|src\Pic\coding_background.png
What is a Computer ?|It is an electronic device that stores and process data.A computer comprises two main components which is hardware and software. Hardware includes physical parts like the motherboard, mouse, keyboard, and CPU, while software encompasses programs and operating systems like Windows XP and MS Word. Together, these components enable computers to perform a wide range of tasks, from simple calculations to complex data analysis.|src\Pic\Picture1.png
History of Computer - Long, Long Ago|The history of computers dates back to ancient times with the invention of the abacus around 3000 BC, which used beads on rods for counting and calculating, a tool still widely used in Asia today. In 1617, John Napier introduced Napier’s Bones, which facilitated calculations through the invention of logarithms and led to the creation of the slide rule. The 19th century saw significant innovations, starting with the Jacquard Loom in 1801, which used metal cards to store programs and marked the first step towards computer manufacturing. Charles Babbage, often referred to as the "father of the computer," designed the Difference Engine in 1822, a large mechanical calculator that was never completed. Later, in 1833, he conceptualized the Analytical Engine, a more advanced machine that could store numbers and perform calculations using punched metal cards for instructions, powered by steam and capable of precision up to six decimal places. |src\Pic\Picture2.png
History of Computers -20th Century|The first generation of computers (1941-1956) was characterized by the use of vacuum tubes, which were glass tubes with circuits inside and devoid of air to protect the circuitry. These early electronic computers, such as the UNIVAC, marked significant technological advancements. The UNIVAC was the first fully electronic digital computer built in the U.S., created at the University of Pennsylvania. It included the ENIAC, a machine that weighed 30 tons, contained 18,000 vacuum tubes, and cost $487,000. Notably, Grace Hopper played a key role in programming the UNIVAC. The second generation (1956-1963) saw the replacement of vacuum tubes with transistors, making computers smaller and more efficient. The third generation (1964-1971) introduced integrated circuits, which combined transistors, resistors, and capacitors into a single chip, and saw the advent of operating systems, further enhancing the functionality and efficiency of computers.|src\Pic\Picture3.png
Evolution of Microprocessors|The introduction of the first microprocessor in 1971, the Intel 4004, revolutionized computing by packing 2,250 transistors into a single microchip capable of processing data in four-bit chunks at a speed of 108 kHz. A microchip, or Very Large Scale Integrated Circuit (VLSIC), integrates numerous transistors, resistors, and capacitors into a compact form. For comparison, while the 4004 had 2,250 transistors, modern processors like the Pentium IV boast 42 million transistors, each only 0.13 microns in size. The development of personal computers began with the MITS Altair in 1975, which was one of the first early personal computers available to the general public. This was followed by the IBM PC in 1981, a joint venture that resulted in a widely adopted computer for business use. Apple Computers made significant contributions with the introduction of the Apple II in 1977 and later the Macintosh in 1984.|src\Pic\Picture4.png
Modern Computing|In the 1990s, computers began penetrating every niche, becoming ubiquitous on desks and in most homes. This was facilitated by the advent of faster and less expensive computers. Windows 95, released in the mid-1990s, was the first widely accepted graphical user interface (GUI) for PCs, making personal computers more user-friendly. Meanwhile, Macs computers became more compatible with PCs, allowing for easier file transfers. During this period, computer prices dropped significantly, with entry-level models falling from $2000 to $500 and top-of-the-line models decreasing from $6000 to $1500. Entering the 21st century, there were significant advancements in computing speed, storage, and memory. Networking and Internet speeds increased, enhancing connectivity and information exchange. The widespread use of CD-RWs allowed for greater data portability and storage. Personal Digital Assistants (PDAs) and cell phone/PDAs emerged, providing portable computing power. Additionally, wireless technology became prevalent, further transforming how people accessed and used computers and the Internet.|src\Pic\Picture5.png
What is Inside a Computer?|Inside a computer, there are various essential components categorized as hardware and software. Hardware includes the Central Processing Unit (CPU), such as Intel Duo Core or AMD processors, which serve as the brain of the computer. Memory components include the hard disk and RAM, essential for data storage and quick access. Storage devices like pen drives, CDs, DVDs, and diskettes provide additional means to store and transfer data. Input devices, such as the keyboard, mouse, and scanner, allow users to interact with the computer, while output devices like monitors, projectors, and speakers display or produce output. Communication devices, including modems, wireless cards, switches, hubs, and routers, enable network connectivity and data exchange. Software, also known as computer programs, is a collection of instructions that directs the computer on how to operate. Software can be written in various programming languages and includes essential programs called the operating system (OS), which manages the basic operations of the computer. Examples of operating systems are Microsoft Windows, DOS, OS X (Mac), and UNIX.|src\Pic\Picture6.png
Programming Languages|A programming language is a machine-readable artificial language designed for computations. The first type is Machine Languages. Computers cannot understand human languages and only understand numbers in a digital format. Machines languages are machine-dependents, but it generally consists string of numbers (eventually will reduce to 1s and 0s). For example, a machine language instruction might look like "1000100111" in binary or "+130042774" in a different numeric format. The second type of programming language is Assembly Languages. Machine language is difficult for humans to understand and write, so assembly languages were developed using English-like abbreviations to form basic instructions. A translator program called an assembler converts assembly language into machine language. Examples of assembly language syntax include instructions like LOAD, ADD, and STORE. The third programming language is High-Level Languages. Assembly language is easier to use and learn compared to machine language, but it is still very tedious to write a complex program which involve a lot of operation. High-level languages are developed, where single statements can accomplish substantial tasks. It make programming more easier and fun. Translator programs called compiler convert high-level language to machine language. Example of High-level language are C, C++, JAVA, FOTRAN, COBOL, PYTHON, PHP….|src\Pic\Picture7.png
How Computer Works?|A computer operates by using a central processing unit (CPU), which includes the control unit (CU) and arithmetic logic unit (ALU), to process instructions. Input devices, such as keyboards or mice, provide data to the CPU, which then communicates with the memory (RAM) to store and retrieve information. The CPU processes this data and sends the results to output devices like monitors or printers.|src\Pic\Picture8.png
Types of Programming Paradigms|The imperative paradigm includes Procedural/Structured Programming, Object-Oriented Programming, Parallel Processing. The declarative paradigm includes Logic Programming, Functional Programming, Database Processing. Procedural/structured programming features a close relation to machine architecture and is based on the Von Neumann architecture. It works by changing the program state through assignment statements and performs tasks step by step by changing the state. The main focus of procedural programming is on how to achieve the goal.|src\Pic\Picture9.png
What Does it Take to Become a Programmer?|To become a programmer, you don't need extensive math knowledge, just basic arithmetic and strong analytical skills. Designing solutions to problems is crucial, requiring logical and precise thinking. Patience is important, as programming can be frustrating but rewarding both in satisfaction and monetarily. Being a good problem solver is essential to frame problems correctly without creating new ones. To learn programming faster, look at example code, then code it yourself, run it, and modify it. Write your own code as soon as possible and seek out multiple learning resources to broaden your understanding.|src\Pic\Picture10.png